name: Python CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: .cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pylint coverage

      - name: Run tests
        run: make test

  build-and-deploy-docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # important for pushing later

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx-rtd-theme

      - name: Build docs
        run: |
          cd docs
          make html

      - name: Deploy docs to gh-pages branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Create a temporary directory to hold docs
          mkdir temp-docs

          # Copy built docs into temp-docs
          cp -r docs/build/html/* temp-docs/

          # Fetch gh-pages branch if it exists
          git fetch origin gh-pages || true
          if git show-ref --verify --quiet refs/heads/gh-pages; then
            git checkout gh-pages
          else
            git checkout --orphan gh-pages
          fi

          # Remove all existing files
          git rm -rf . || true

          # Copy new docs into branch root
          cp -r temp-docs/* .

          # Commit and push changes
          git add .
          git commit -m "Update docs [skip ci]" || echo "No changes to commit"
          git push origin gh-pages --force